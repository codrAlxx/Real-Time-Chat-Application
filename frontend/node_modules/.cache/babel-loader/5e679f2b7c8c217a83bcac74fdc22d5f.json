{"ast":null,"code":"import axios from 'axios';\nimport { FRIEND_GET_SUCCESS, MESSAGE_GET_SUCCESS, MESSAGE_SEND_SUCCESS, THEME_GET_SUCCESS, THEME_SET_SUCCESS } from \"../types/messengerType\";\nexport const getFriends = () => async dispatch => {\n  try {\n    const response = await axios.get('/api/messenger/get-friends');\n    dispatch({\n      type: FRIEND_GET_SUCCESS,\n      payload: {\n        friends: response.data.friends\n      }\n    });\n  } catch (error) {\n    console.log(error.response.data);\n  }\n};\nexport const messageSend = data => async dispatch => {\n  try {\n    const response = await axios.post('/api/messenger/send-message', data);\n    dispatch({\n      type: MESSAGE_SEND_SUCCESS,\n      payload: {\n        message: response.data.message\n      }\n    });\n  } catch (error) {\n    console.log(error.response.data);\n  }\n};\nexport const getMessage = id => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`/api/messenger/get-message/${id}`);\n      dispatch({\n        type: MESSAGE_GET_SUCCESS,\n        payload: {\n          message: response.data.message\n        }\n      });\n    } catch (error) {\n      console.log(error.response.data);\n    }\n  };\n};\nexport const ImageMessageSend = data => async dispatch => {\n  try {\n    const response = await axios.post('/api/messenger/image-message-send', data);\n    dispatch({\n      type: MESSAGE_SEND_SUCCESS,\n      payload: {\n        message: response.data.message\n      }\n    });\n  } catch (error) {\n    console.log(error.response.data);\n  }\n};\nexport const seenMessage = msg => async dispatch => {\n  try {\n    const response = await axios.post('/api/messenger/seen-message', msg);\n    console.log(response.data);\n  } catch (error) {\n    console.log(error.response.message);\n  }\n};\nexport const updateMessage = msg => async dispatch => {\n  try {\n    const response = await axios.post('/api/messenger/delivared-message', msg);\n    console.log(response.data);\n  } catch (error) {\n    console.log(error.response.message);\n  }\n};\nexport const getTheme = () => async dispatch => {\n  const theme = localStorage.getItem('theme');\n  dispatch({\n    type: \"THEME_GET_SUCCESS\",\n    payload: {\n      theme: theme ? theme : 'white'\n    }\n  });\n};\nexport const themeSet = theme => async dispatch => {\n  localStorage.setItem('theme', theme);\n  dispatch({\n    type: \"THEME_SET_SUCCESS\",\n    payload: {\n      theme: theme\n    }\n  });\n};","map":{"version":3,"sources":["/Users/alok/Documents/Dev/Projects/Real-Time-Chat-App/RealTimeChatApp/frontend/src/store/actions/messengerAction.js"],"names":["axios","FRIEND_GET_SUCCESS","MESSAGE_GET_SUCCESS","MESSAGE_SEND_SUCCESS","THEME_GET_SUCCESS","THEME_SET_SUCCESS","getFriends","dispatch","response","get","type","payload","friends","data","error","console","log","messageSend","post","message","getMessage","id","ImageMessageSend","seenMessage","msg","updateMessage","getTheme","theme","localStorage","getItem","themeSet","setItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {FRIEND_GET_SUCCESS,MESSAGE_GET_SUCCESS,MESSAGE_SEND_SUCCESS,THEME_GET_SUCCESS,THEME_SET_SUCCESS} from \"../types/messengerType\";\r\n\r\nexport const getFriends = () => async(dispatch) => {\r\n     try{\r\n          const response = await axios.get('/api/messenger/get-friends');\r\n           dispatch({\r\n                type: FRIEND_GET_SUCCESS,\r\n                payload : {\r\n                     friends : response.data.friends\r\n                }\r\n           })\r\n\r\n     }catch (error){\r\n          console.log(error.response.data);\r\n     }\r\n}\r\n\r\nexport const messageSend = (data) => async(dispatch) => {\r\n    try{\r\n     const response = await axios.post('/api/messenger/send-message',data);\r\n     dispatch({\r\n          type : MESSAGE_SEND_SUCCESS,\r\n          payload : {\r\n               message : response.data.message\r\n          }\r\n     })\r\n    }catch (error){\r\n     console.log(error.response.data);\r\n    }\r\n}\r\n\r\n\r\nexport const getMessage = (id) => {\r\n     return async(dispatch) => {\r\n          try{\r\n               const response = await axios.get(`/api/messenger/get-message/${id}`)\r\n              dispatch({\r\n                   type : MESSAGE_GET_SUCCESS,\r\n                   payload : {\r\n                    message : response.data.message\r\n                   }\r\n              })\r\n          }catch (error){\r\n               console.log(error.response.data)\r\n          }\r\n     }\r\n}\r\n\r\n\r\nexport const ImageMessageSend = (data) => async(dispatch)=>{\r\n\r\n     try{\r\n          const response = await axios.post('/api/messenger/image-message-send',data);\r\n          dispatch({\r\n               type: MESSAGE_SEND_SUCCESS,\r\n               payload : {\r\n                    message : response.data.message\r\n               }\r\n          })\r\n     }catch (error){\r\n          console.log(error.response.data);\r\n\r\n     }\r\n\r\n}\r\n\r\nexport const seenMessage = (msg) => async(dispatch)=> {\r\n     try{\r\n          const response = await axios.post('/api/messenger/seen-message',msg);\r\n          console.log(response.data);\r\n     }catch (error){\r\n          console.log(error.response.message)\r\n\r\n     }\r\n}\r\n\r\n\r\nexport const updateMessage = (msg) => async(dispatch)=> {\r\n     try{\r\n          const response = await axios.post('/api/messenger/delivared-message',msg);\r\n          console.log(response.data);\r\n     }catch (error){\r\n          console.log(error.response.message)\r\n\r\n     }\r\n}\r\n\r\n\r\nexport const getTheme = () => async(dispatch) => {\r\n\r\n     const theme = localStorage.getItem('theme');\r\n     dispatch({\r\n          type: \"THEME_GET_SUCCESS\",\r\n          payload : {\r\n               theme : theme? theme : 'white'\r\n          }\r\n     })\r\n\r\n}\r\n\r\n\r\nexport const themeSet = (theme) => async(dispatch) => {\r\n\r\n     localStorage.setItem('theme',theme);\r\n     dispatch({\r\n          type: \"THEME_SET_SUCCESS\",\r\n          payload : {\r\n               theme : theme\r\n          }\r\n     })\r\n     \r\n}\r\n"]},"metadata":{},"sourceType":"module"}