{"ast":null,"code":"var _jsxFileName = \"/Users/alok/Documents/Dev/Projects/Real-Time-Chat-App/RealTimeChatApp/frontend/src/components/Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { FaEllipsisH, FaEdit, FaSistrix, FaSignOutAlt } from \"react-icons/fa\";\nimport ActiveFriend from './ActiveFriend';\nimport Friends from './Friends';\nimport RightSide from './RightSide';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFriends, messageSend, getMessage, ImageMessageSend, seenMessage, updateMessage, getTheme, themeSet } from '../store/actions/messengerAction';\nimport { userLogout } from '../store/actions/authAction';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { io } from 'socket.io-client';\nimport useSound from 'use-sound';\nimport notificationSound from '../audio/notification.mp3';\nimport sendingSound from '../audio/sending.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messenger = () => {\n  _s();\n\n  const [notificationSPlay] = useSound(notificationSound);\n  const [sendingSPlay] = useSound(sendingSound);\n  const scrollRef = useRef();\n  const socket = useRef();\n  const {\n    friends,\n    message,\n    mesageSendSuccess,\n    message_get_success,\n    themeMood,\n    new_user_add\n  } = useSelector(state => state.messenger);\n  const {\n    myInfo\n  } = useSelector(state => state.auth);\n  const [currentfriend, setCurrentFriend] = useState('');\n  const [newMessage, setNewMessage] = useState('');\n  const [activeUser, setActiveUser] = useState([]);\n  const [socketMessage, setSocketMessage] = useState('');\n  const [typingMessage, setTypingMessage] = useState('');\n  useEffect(() => {\n    socket.current = io('ws://localhost:8000');\n    socket.current.on('getMessage', data => {\n      setSocketMessage(data);\n    });\n    socket.current.on('typingMessageGet', data => {\n      setTypingMessage(data);\n    });\n    socket.current.on('msgSeenResponse', msg => {\n      dispatch({\n        type: 'SEEN_MESSAGE',\n        payload: {\n          msgInfo: msg\n        }\n      });\n    });\n    socket.current.on('msgDelivaredResponse', msg => {\n      dispatch({\n        type: 'DELIVARED_MESSAGE',\n        payload: {\n          msgInfo: msg\n        }\n      });\n    });\n    socket.current.on('seenSuccess', data => {\n      dispatch({\n        type: 'SEEN_ALL',\n        payload: data\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (socketMessage && currentfriend) {\n      if (socketMessage.senderId === currentfriend._id && socketMessage.reseverId === myInfo.id) {\n        dispatch({\n          type: 'SOCKET_MESSAGE',\n          payload: {\n            message: socketMessage\n          }\n        });\n        dispatch(seenMessage(socketMessage));\n        socket.current.emit('messageSeen', socketMessage);\n        dispatch({\n          type: 'UPDATE_FRIEND_MESSAGE',\n          payload: {\n            msgInfo: socketMessage,\n            status: 'seen'\n          }\n        });\n      }\n    }\n\n    setSocketMessage('');\n  }, [socketMessage]);\n  useEffect(() => {\n    socket.current.emit('addUser', myInfo.id, myInfo);\n  }, []);\n  useEffect(() => {\n    socket.current.on('getUser', users => {\n      const filterUser = users.filter(u => u.userId !== myInfo.id);\n      setActiveUser(filterUser);\n    });\n    socket.current.on('new_user_add', data => {\n      dispatch({\n        type: 'NEW_USER_ADD',\n        payload: {\n          new_user_add: data\n        }\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (socketMessage && socketMessage.senderId !== currentfriend._id && socketMessage.reseverId === myInfo.id) {\n      notificationSPlay();\n      toast.success(`${socketMessage.senderName} Send a New Message`);\n      dispatch(updateMessage(socketMessage));\n      socket.current.emit('delivaredMessage', socketMessage);\n      dispatch({\n        type: 'UPDATE_FRIEND_MESSAGE',\n        payload: {\n          msgInfo: socketMessage,\n          status: 'delivared'\n        }\n      });\n    }\n  }, [socketMessage]);\n\n  const inputHendle = e => {\n    setNewMessage(e.target.value);\n    socket.current.emit('typingMessage', {\n      senderId: myInfo.id,\n      reseverId: currentfriend._id,\n      msg: e.target.value\n    });\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n    sendingSPlay();\n    const data = {\n      senderName: myInfo.userName,\n      reseverId: currentfriend._id,\n      message: newMessage ? newMessage : '❤'\n    };\n    socket.current.emit('typingMessage', {\n      senderId: myInfo.id,\n      reseverId: currentfriend._id,\n      msg: ''\n    });\n    dispatch(messageSend(data));\n    setNewMessage('');\n  };\n\n  useEffect(() => {\n    if (mesageSendSuccess) {\n      socket.current.emit('sendMessage', message[message.length - 1]);\n      dispatch({\n        type: 'UPDATE_FRIEND_MESSAGE',\n        payload: {\n          msgInfo: message[message.length - 1]\n        }\n      });\n      dispatch({\n        type: 'MESSAGE_SEND_SUCCESS_CLEAR'\n      });\n    }\n  }, [mesageSendSuccess]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getFriends());\n    dispatch({\n      type: 'NEW_USER_ADD_CLEAR'\n    });\n  }, [new_user_add]);\n  useEffect(() => {\n    if (friends && friends.length > 0) setCurrentFriend(friends[0].fndInfo);\n  }, [friends]);\n  useEffect(() => {\n    dispatch(getMessage(currentfriend._id));\n\n    if (friends.length > 0) {}\n  }, [currentfriend === null || currentfriend === void 0 ? void 0 : currentfriend._id]);\n  useEffect(() => {\n    if (message.length > 0) {\n      if (message[message.length - 1].senderId !== myInfo.id && message[message.length - 1].status !== 'seen') {\n        dispatch({\n          type: 'UPDATE',\n          payload: {\n            id: currentfriend._id\n          }\n        });\n        socket.current.emit('seen', {\n          senderId: currentfriend._id,\n          reseverId: myInfo.id\n        });\n        dispatch(seenMessage({\n          _id: message[message.length - 1]._id\n        }));\n      }\n    }\n\n    dispatch({\n      type: 'MESSAGE_GET_SUCCESS_CLEAR'\n    });\n  }, [message_get_success]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [message]);\n\n  const emojiSend = emu => {\n    setNewMessage(`${newMessage}` + emu);\n    socket.current.emit('typingMessage', {\n      senderId: myInfo.id,\n      reseverId: currentfriend._id,\n      msg: emu\n    });\n  };\n\n  const ImageSend = e => {\n    if (e.target.files.length !== 0) {\n      sendingSPlay();\n      const imagename = e.target.files[0].name;\n      const newImageName = Date.now() + imagename;\n      socket.current.emit('sendMessage', {\n        senderId: myInfo.id,\n        senderName: myInfo.userName,\n        reseverId: currentfriend._id,\n        time: new Date(),\n        message: {\n          text: '',\n          image: newImageName\n        }\n      });\n      const formData = new FormData();\n      formData.append('senderName', myInfo.userName);\n      formData.append('imageName', newImageName);\n      formData.append('reseverId', currentfriend._id);\n      formData.append('image', e.target.files[0]);\n      dispatch(ImageMessageSend(formData));\n    }\n  };\n\n  const [hide, setHide] = useState(true);\n\n  const logout = () => {\n    dispatch(userLogout());\n    socket.current.emit('logout', myInfo.id);\n  };\n\n  useEffect(() => {\n    dispatch(getTheme());\n  }, []);\n\n  const search = e => {\n    const getFriendClass = document.getElementsByClassName('hover-friend');\n    const frienNameClass = document.getElementsByClassName('Fd_name');\n\n    for (var i = 0; i < getFriendClass.length, i < frienNameClass.length; i++) {\n      let text = frienNameClass[i].innerText.toLowerCase();\n\n      if (text.indexOf(e.target.value.toLowerCase()) > -1) {\n        getFriendClass[i].style.display = '';\n      } else {\n        getFriendClass[i].style.display = 'none';\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: themeMood === 'dark' ? 'messenger theme' : 'messenger',\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: 'top-right',\n      reverseOrder: false,\n      toastOptions: {\n        style: {\n          fontSize: '18px'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-name\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `./image/${myInfo.image}`,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [myInfo.userName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icons\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => setHide(!hide),\n                className: \"icon\",\n                children: /*#__PURE__*/_jsxDEV(FaEllipsisH, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon\",\n                children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: hide ? 'theme_logout' : 'theme_logout show',\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Dark Mode \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"on\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"dark\",\n                    children: \"ON\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 18\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: e => dispatch(themeSet(e.target.value)),\n                    type: \"radio\",\n                    value: \"dark\",\n                    name: \"theme\",\n                    id: \"dark\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 18\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"of\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"white\",\n                    children: \"OFF\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 18\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: e => dispatch(themeSet(e.target.value)),\n                    type: \"radio\",\n                    value: \"white\",\n                    name: \"theme\",\n                    id: \"white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 18\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: logout,\n                  className: \"logout\",\n                  children: [/*#__PURE__*/_jsxDEV(FaSignOutAlt, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 16\n                  }, this), \" Logout\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 18\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friend-search\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(FaSistrix, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 30\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: search,\n                type: \"text\",\n                placeholder: \"Search\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friends\",\n            children: friends && friends.length > 0 ? friends.map(fd => /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setCurrentFriend(fd.fndInfo),\n              className: currentfriend._id === fd.fndInfo._id ? 'hover-friend active' : 'hover-friend',\n              children: /*#__PURE__*/_jsxDEV(Friends, {\n                activeUser: activeUser,\n                myId: myInfo.id,\n                friend: fd\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 61\n            }, this)) : 'No Friend'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 6\n      }, this), currentfriend ? /*#__PURE__*/_jsxDEV(RightSide, {\n        currentfriend: currentfriend,\n        inputHendle: inputHendle,\n        newMessage: newMessage,\n        sendMessage: sendMessage,\n        message: message,\n        scrollRef: scrollRef,\n        emojiSend: emojiSend,\n        ImageSend: ImageSend,\n        activeUser: activeUser,\n        typingMessage: typingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 28\n      }, this) : 'Please Select your Friend']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Messenger, \"6LbqimL62StLeh/yKLHtvr9DJDQ=\", false, function () {\n  return [useSound, useSound, useSelector, useSelector, useDispatch];\n});\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/Users/alok/Documents/Dev/Projects/Real-Time-Chat-App/RealTimeChatApp/frontend/src/components/Messenger.jsx"],"names":["React","useEffect","useState","useRef","FaEllipsisH","FaEdit","FaSistrix","FaSignOutAlt","ActiveFriend","Friends","RightSide","useDispatch","useSelector","getFriends","messageSend","getMessage","ImageMessageSend","seenMessage","updateMessage","getTheme","themeSet","userLogout","toast","Toaster","io","useSound","notificationSound","sendingSound","Messenger","notificationSPlay","sendingSPlay","scrollRef","socket","friends","message","mesageSendSuccess","message_get_success","themeMood","new_user_add","state","messenger","myInfo","auth","currentfriend","setCurrentFriend","newMessage","setNewMessage","activeUser","setActiveUser","socketMessage","setSocketMessage","typingMessage","setTypingMessage","current","on","data","msg","dispatch","type","payload","msgInfo","senderId","_id","reseverId","id","emit","status","users","filterUser","filter","u","userId","success","senderName","inputHendle","e","target","value","sendMessage","preventDefault","userName","length","fndInfo","scrollIntoView","behavior","emojiSend","emu","ImageSend","files","imagename","name","newImageName","Date","now","time","text","image","formData","FormData","append","hide","setHide","logout","search","getFriendClass","document","getElementsByClassName","frienNameClass","i","innerText","toLowerCase","indexOf","style","display","fontSize","map","fd"],"mappings":"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","sourcesContent":["import React,{ useEffect,useState,useRef } from 'react';\r\nimport { FaEllipsisH,FaEdit,FaSistrix,FaSignOutAlt } from \"react-icons/fa\";\r\nimport ActiveFriend from './ActiveFriend';\r\nimport Friends from './Friends';\r\nimport RightSide from './RightSide';\r\nimport {useDispatch ,useSelector } from 'react-redux';\r\nimport { getFriends,messageSend,getMessage,ImageMessageSend,seenMessage,updateMessage,getTheme,themeSet } from '../store/actions/messengerAction';\r\nimport {userLogout } from '../store/actions/authAction';\r\n\r\nimport toast,{Toaster} from 'react-hot-toast';\r\nimport {io} from 'socket.io-client';\r\nimport useSound from 'use-sound';\r\nimport notificationSound from '../audio/notification.mp3';\r\nimport sendingSound from '../audio/sending.mp3';\r\n\r\nconst Messenger = () => {\r\n\r\n const [notificationSPlay] = useSound(notificationSound);   \r\n const [sendingSPlay] = useSound(sendingSound);  \r\n\r\n const scrollRef = useRef();\r\n const socket = useRef();\r\n\r\n\r\n const {friends,message,mesageSendSuccess,message_get_success,themeMood,new_user_add} = useSelector(state => state.messenger );\r\n const {myInfo} = useSelector(state => state.auth);\r\n\r\n const [currentfriend, setCurrentFriend] = useState('');\r\n const [newMessage, setNewMessage] = useState('');\r\n\r\n const [activeUser, setActiveUser] = useState([]);\r\n const [socketMessage, setSocketMessage] = useState('');\r\n const [typingMessage, setTypingMessage] = useState('');\r\n\r\n useEffect(() => {\r\n    socket.current = io('ws://localhost:8000');\r\n    socket.current.on('getMessage',(data) => {\r\n        setSocketMessage(data);\r\n    })\r\n\r\n    socket.current.on('typingMessageGet',(data) => {\r\n     setTypingMessage(data);\r\n })\r\n\r\n socket.current.on('msgSeenResponse', msg => {\r\n     dispatch({\r\n          type : 'SEEN_MESSAGE',\r\n          payload : {\r\n               msgInfo : msg\r\n          }\r\n     })\r\n })\r\n\r\n socket.current.on('msgDelivaredResponse', msg => {\r\n     dispatch({\r\n          type : 'DELIVARED_MESSAGE',\r\n          payload : {\r\n               msgInfo : msg\r\n          }\r\n     })\r\n })\r\n\r\n socket.current.on('seenSuccess', data => {\r\n      dispatch({\r\n           type : 'SEEN_ALL',\r\n           payload : data\r\n      })\r\n })\r\n\r\n},[]);\r\n\r\n\r\nuseEffect(() => {\r\n    if(socketMessage && currentfriend){\r\n         if(socketMessage.senderId === currentfriend._id && socketMessage.reseverId === myInfo.id){\r\n              dispatch({\r\n                   type: 'SOCKET_MESSAGE',\r\n                   payload : {\r\n                        message: socketMessage\r\n                   }\r\n              })\r\n              dispatch(seenMessage(socketMessage));\r\n              socket.current.emit('messageSeen',socketMessage);\r\n              dispatch({\r\n               type: 'UPDATE_FRIEND_MESSAGE',\r\n               payload : {\r\n                    msgInfo : socketMessage,\r\n                    status : 'seen'\r\n               }\r\n          })\r\n         }\r\n    }\r\n    setSocketMessage('')\r\n },[socketMessage]);\r\n\r\n\r\n\r\nuseEffect(() => {\r\n     socket.current.emit('addUser', myInfo.id, myInfo)\r\n },[]);\r\n\r\n useEffect(() => {\r\n     socket.current.on('getUser', (users)=>{\r\n          const filterUser = users.filter(u => u.userId !== myInfo.id)\r\n          setActiveUser(filterUser);\r\n     })\r\n\r\n     socket.current.on('new_user_add',data => {\r\n          dispatch({\r\n               type : 'NEW_USER_ADD',\r\n               payload : {\r\n                    new_user_add : data\r\n               }\r\n          })\r\n     })\r\n\r\n\r\n\r\n },[]);\r\n\r\n useEffect(() => {\r\n      if(socketMessage && socketMessage.senderId !== currentfriend._id && socketMessage.reseverId === myInfo.id){\r\n           notificationSPlay();\r\n           toast.success(`${socketMessage.senderName} Send a New Message`)\r\n           dispatch(updateMessage(socketMessage));\r\n           socket.current.emit('delivaredMessage',socketMessage);\r\n           dispatch({\r\n            type: 'UPDATE_FRIEND_MESSAGE',\r\n            payload : {\r\n                 msgInfo : socketMessage,\r\n                 status : 'delivared'\r\n            }\r\n       })\r\n\r\n      }\r\n },[socketMessage]);\r\n\r\n\r\n \r\n\r\n const inputHendle = (e) => {\r\n     setNewMessage(e.target.value);\r\n\r\n     socket.current.emit('typingMessage',{\r\n          senderId : myInfo.id,\r\n          reseverId : currentfriend._id,\r\n          msg : e.target.value\r\n     })\r\n\r\n }\r\n \r\n const sendMessage = (e) => {\r\n     e.preventDefault();\r\n     sendingSPlay();\r\n     const data = {\r\n          senderName : myInfo.userName,\r\n          reseverId : currentfriend._id,\r\n          message : newMessage ? newMessage : '❤'\r\n     }\r\n\r\n     \r\n     socket.current.emit('typingMessage',{\r\n          senderId : myInfo.id,\r\n          reseverId : currentfriend._id,\r\n          msg : ''\r\n     })\r\n\r\n     dispatch(messageSend(data));\r\n     setNewMessage('')\r\n }\r\n\r\n\r\n useEffect(() => {\r\n      if(mesageSendSuccess){\r\n          socket.current.emit('sendMessage', message[message.length -1 ]);\r\n          dispatch({\r\n               type: 'UPDATE_FRIEND_MESSAGE',\r\n               payload : {\r\n                    msgInfo : message[message.length -1]\r\n               }\r\n          })\r\n          dispatch({\r\n               type: 'MESSAGE_SEND_SUCCESS_CLEAR'\r\n          })\r\n      }\r\n},[mesageSendSuccess]);\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n     const dispatch = useDispatch();\r\n     useEffect(() => {\r\n          dispatch(getFriends());\r\n          dispatch({type:'NEW_USER_ADD_CLEAR'})\r\n     },[new_user_add]);\r\n\r\n     useEffect(() => {\r\n         if(friends && friends.length > 0)\r\n         setCurrentFriend(friends[0].fndInfo)\r\n       \r\n     },[friends]);\r\n\r\n\r\n     useEffect(() => {\r\n          dispatch(getMessage(currentfriend._id));\r\n          if(friends.length > 0){\r\n              \r\n          }\r\n      },[ currentfriend?._id]);\r\n\r\n\r\n      useEffect(() => {\r\n           if(message.length > 0){\r\n                if(message[message.length -1].senderId !== myInfo.id && message[message.length -1].status !== 'seen'){\r\n                    dispatch({\r\n                         type: 'UPDATE',\r\n                         payload : {\r\n                              id : currentfriend._id\r\n                         }\r\n                    })\r\n                     socket.current.emit('seen', { senderId: currentfriend._id, reseverId: myInfo.id })\r\n                dispatch(seenMessage({ _id: message[message.length -1]._id }))\r\n               }\r\n           }\r\n           dispatch ({\r\n                type: 'MESSAGE_GET_SUCCESS_CLEAR'\r\n           })\r\n           \r\n      },[ message_get_success]);\r\n\r\n\r\n \r\n      useEffect(() => {\r\n          scrollRef.current?.scrollIntoView({behavior: 'smooth'}) \r\n      },[ message]);\r\n \r\n\r\n     const emojiSend = (emu) => {\r\n          setNewMessage(`${newMessage}`+  emu);\r\n          socket.current.emit('typingMessage',{\r\n               senderId : myInfo.id,\r\n               reseverId : currentfriend._id,\r\n               msg : emu\r\n          })\r\n     }\r\n\r\n     const ImageSend = (e) => {\r\n\r\n          if(e.target.files.length !== 0){\r\n               sendingSPlay();\r\n               const imagename = e.target.files[0].name;\r\n               const newImageName = Date.now() + imagename;\r\n\r\n               socket.current.emit('sendMessage',{\r\n                    senderId: myInfo.id,\r\n                    senderName: myInfo.userName,\r\n                    reseverId: currentfriend._id,\r\n                    time: new Date(),\r\n                    message : {\r\n                         text : '',\r\n                         image : newImageName\r\n                    }\r\n               })\r\n\r\n               const formData = new FormData();\r\n\r\n               formData.append('senderName',myInfo.userName);\r\n               formData.append('imageName',newImageName);\r\n               formData.append('reseverId',currentfriend._id);\r\n               formData.append('image', e.target.files[0]);\r\n               dispatch(ImageMessageSend(formData));\r\n                \r\n          } \r\n         \r\n     }\r\n\r\n     const [hide, setHide] = useState(true);\r\n\r\n     const logout = () => {\r\n          dispatch(userLogout());\r\n          socket.current.emit('logout', myInfo.id);\r\n     }\r\n\r\n     useEffect(() => {\r\n         dispatch(getTheme());\r\n      },[ ]);\r\n \r\n      const search = (e) => {\r\n\r\n          const getFriendClass = document.getElementsByClassName('hover-friend');\r\n          const frienNameClass = document.getElementsByClassName('Fd_name');\r\n          for (var i = 0; i < getFriendClass.length, i < frienNameClass.length; i++) {\r\n              let text = frienNameClass[i].innerText.toLowerCase();\r\n              if (text.indexOf(e.target.value.toLowerCase()) > -1) {\r\n                  getFriendClass[i].style.display = '';\r\n              } else {\r\n                  getFriendClass[i].style.display = 'none';\r\n              }\r\n          }\r\n      }\r\n\r\n\r\n  return (\r\n       <div className={themeMood === 'dark' ? 'messenger theme' : 'messenger' }>\r\n            <Toaster\r\n            position={'top-right'}\r\n            reverseOrder = {false}\r\n            toastOptions={{\r\n                 style : {\r\n                      fontSize : '18px'\r\n                 }\r\n            }}\r\n            \r\n            />\r\n\r\n\r\n<div className='row'>\r\n     <div className='col-3'>\r\n          <div className='left-side'>\r\n               <div className='top'>\r\n                    <div className='image-name'>\r\n                         <div className='image'>\r\n                              <img src={`./image/${myInfo.image}`} alt='' />\r\n\r\n                         </div>\r\n                         <div className='name'>\r\n                         <h3>{myInfo.userName} </h3>\r\n                         </div>\r\n                       </div>\r\n\r\n                       <div className='icons'>\r\n  <div onClick={()=> setHide(!hide) }  className='icon'>\r\n                              <FaEllipsisH />\r\n                            </div>\r\n                            <div className='icon'>\r\n                                  <FaEdit/> \r\n                            </div>\r\n\r\n            <div className={hide ? 'theme_logout' : 'theme_logout show'}>\r\n                 <h3>Dark Mode </h3>\r\n            <div className='on'>\r\n                 <label htmlFor='dark'>ON</label>\r\n                 <input onChange={(e) => dispatch(themeSet(e.target.value)) } type=\"radio\" value=\"dark\" name=\"theme\" id=\"dark\" />\r\n                 </div>\r\n\r\n                 <div className='of'>\r\n                 <label htmlFor='white'>OFF</label>\r\n                 <input onChange={(e) => dispatch(themeSet(e.target.value)) } type=\"radio\" value=\"white\" name=\"theme\" id=\"white\" />\r\n                 </div>\r\n\r\n                 <div onClick={logout} className='logout'>\r\n               <FaSignOutAlt /> Logout\r\n                 </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                       </div>\r\n               </div>\r\n\r\n               <div className='friend-search'>\r\n                    <div className='search'>\r\n                    <button> <FaSistrix /> </button>\r\n  <input onChange={search} type=\"text\" placeholder='Search' className='form-control' />\r\n                    </div>\r\n               </div>\r\n\r\n               {/* <div className='active-friends'>\r\n     {\r\n        activeUser && activeUser.length > 0 ? activeUser.map(u =>  <ActiveFriend setCurrentFriend = {setCurrentFriend} user={u} />) : ''  \r\n     }\r\n                        \r\n               </div> */}\r\n\r\n               <div className='friends'>\r\n     {\r\n          friends && friends.length>0 ? friends.map((fd) => <div onClick={()=> setCurrentFriend(fd.fndInfo)} className={currentfriend._id === fd.fndInfo._id ? 'hover-friend active' : 'hover-friend' }> \r\n          <Friends activeUser= {activeUser} myId = {myInfo.id}  friend={fd} />\r\n          </div> ) : 'No Friend'\r\n     } \r\n                    \r\n                    \r\n\r\n               </div>\r\n\r\n          </div>\r\n                      \r\n                 </div>\r\n\r\n     {\r\n          currentfriend ?  <RightSide \r\n          currentfriend={currentfriend}\r\n          inputHendle={inputHendle}\r\n          newMessage={newMessage}\r\n          sendMessage={sendMessage}\r\n          message={message}\r\n          scrollRef= {scrollRef}\r\n          emojiSend = {emojiSend}\r\n          ImageSend= {ImageSend}\r\n          activeUser = {activeUser}\r\n          typingMessage = {typingMessage}\r\n          /> : 'Please Select your Friend'\r\n     }\r\n                \r\n\r\n            </div>\r\n\r\n       </div>\r\n  )\r\n};\r\n\r\nexport default Messenger;\r\n"]},"metadata":{},"sourceType":"module"}